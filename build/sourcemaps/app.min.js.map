{"version":3,"sources":["app.js"],"names":["maskOptions","mask","document","querySelectorAll","length","forEach","item","IMask","body","header","querySelector","searchElem","spoilerElem","hero","lastScroll","Math","max","window","scrollY","ticking","onScroll","currentScroll","classList","add","makeWhite","makeTransparent","remove","btn","addEventListener","contains","bodyUnLock","bodyLock","search","backdrop","spoiler","burgerBtn","mobileMenu","sublink","subMenu","subMenuBack","e","preventDefault","burger","requestAnimationFrame","home","slider","Swiper","slidesPerView","spaceBetween","navigation","nextEl","prevEl","mousewheel","enabled","forceToAxis","media","speed","pagination","el","type","renderCustom","swiper","current","total","spans","Array","from","_","i","join","autoplay","delay","disableOnInteraction","loop","tech","techBg","container","parseFloat","getComputedStyle","paddingLeft","clientHeight","marginBottom","paddingTop","gsap","to","width","height","marginLeft","borderRadius","ease","scrollTrigger","trigger","start","end","scrub","invalidateOnRefresh","onUpdate","self","content","bg","progress","_contentShown","opacity","backgroundColor","undefined","items","index","ScrollTrigger","create","onEnter","onEnterBack","wrapper","inner","list","radios","labels","tabs","isDesktop","innerWidth","scrollableDistance","listHeight","scrollHeight","visibleHeight","listWidth","scrollWidth","visibleWidth","clientWidth","scrollTriggerInstance","currentActiveIndex","updateActiveItem","listRect","getBoundingClientRect","newActiveIndex","minDistance","Infinity","listCenter","top","itemRect","itemCenter","bottom","distance","abs","left","right","radio","checked","tab","style","innerHeight","label","targetScrollPosition","offsetTop","targetProgress","min","triggerStart","targetScrollY","scrollTo","behavior","offsetLeft","scrollPosition","scrollTop","pin","pinSpacing","reagents","partners","dots","dot","accordion","geography","help","form","success","catalog","filters","filtersContainer","openBtn","filter","onclick","slideHide","slideShow","product","links","sections","updateActiveLink","currentIndex","section","sectionTop","sectionBottom","offsetHeight","link","toggle","y","pageYOffset","chars","char","breakpoints","0","1024","other","order","listItems","progressCircle","circle","createElement","className","innerHTML","createProgressCircle","appendChild","effect","allowTouchMove","on","slideChange","realIndex","[object Object]","s","time","offset","strokeDashoffset","slideTo","productBtn","productSections","checkVisibility","rect","windowHeight","visibility","btns","production","firstCard","secondCard","set","scale","newSlider","job","Select","placeholder","data","id","value","offers","observer","IntersectionObserver","entries","entry","isIntersecting","target","threshold","rootMargin","offer","observe","article","texts","textWrapper","targetIndex","indexOf","flex","sticky","focus","files","fileInputs","fileInput","input","output","file","textContent","name","lab","markers","borderWidth","utils","mapRange","adjustedProgress","activeIndex","floor","clampedIndex","gallery","contacts","navBtns","scrollbar","draggable","preview","closeBtn","office","about","square","heading","elems","--fill-percent","elem","translate","solutions","sw","team","setInterval","clients","linkSelector","contentSelector","openLinks","contents","openLink","j","duration","setTimeout","registerPlugin","selector","options","this","$el","selectedId","render","setup","getTemplate","clickHandler","bind","$value","event","dataset","select","closest","find","String","close","onSelect","console","warn","open","map","cls","popupLinks","lockPadding","popupCloseIcon","unlock","timeout","popupLink","popupName","getAttribute","replace","popupOpen","getElementById","popupClose","curentPopup","popupActive","doUnlock","log","wrapperElement","lockPaddingValue","offsetWidth","paddingRight","which"],"mappings":"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","file":"../js/app.min.js","sourcesContent":["const maskOptions = {\n   mask: \"+{7} (000) 000-00-00\",\n   // lazy: false,  // make placeholder always visible\n   // placeholderChar: '0'     // defaults to '_'\n};\nif (document.querySelectorAll(\"[data-phone]\").length) {\n   document.querySelectorAll(\"[data-phone]\").forEach((item) => {\n      const mask = IMask(item, maskOptions);\n   });\n}\nconst body = document.body;\n\ngsap.registerPlugin(ScrollTrigger);\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n   home();\n   header();\n   if (window.innerWidth < 569) {\n      accordion(\".footer__subheader--accordion\", \".footer__spoiler\");\n   }\n   help();\n   catalog();\n   product();\n   production();\n   files();\n   media();\n   job();\n   article();\n   contacts();\n   tech();\n   about();\n});\n\nfunction header() {\n   const header = document.querySelector(\".header\");\n   if (!header) return;\n   const searchElem = document.querySelector(\".header-search\");\n   const spoilerElem = document.querySelector(\".header-spoiler\");\n   const hero = document.querySelector(\".hero\");\n   let lastScroll = Math.max(0, window.scrollY);\n   let ticking = false;\n\n   if (!hero) {\n      header.classList.add(\"white\");\n   }\n\n   function onScroll() {\n      const currentScroll = Math.max(0, window.scrollY);\n      if (currentScroll > lastScroll) {\n         makeHidden();\n      } else {\n         makeWhite();\n      }\n      if (currentScroll === 0 && hero) {\n         makeTransparent();\n      }\n      lastScroll = currentScroll;\n      ticking = false;\n   }\n\n   function makeWhite() {\n      header.classList.remove(\"hidden\");\n      header.classList.add(\"white\");\n      document\n         .querySelectorAll(\".header__wrapper .btn--blur\")\n         .forEach((item) => {\n            item.classList.remove(\"btn--blur\");\n            item.classList.add(\"btn--grey-light\");\n         });\n      document\n         .querySelectorAll(\".header__wrapper .btn--transparent-white\")\n         .forEach((item) => {\n            item.classList.remove(\"btn--transparent-white\");\n            item.classList.add(\"btn--transparent-black\");\n         });\n   }\n   function makeTransparent() {\n      header.classList.remove(\"white\");\n      document\n         .querySelectorAll(\".header__wrapper .btn--grey-light\")\n         .forEach((item) => {\n            item.classList.remove(\"btn--grey-light\");\n            item.classList.add(\"btn--blur\");\n         });\n      document\n         .querySelectorAll(\".header__wrapper .btn--transparent-black\")\n         .forEach((item) => {\n            item.classList.remove(\"btn--transparent-black\");\n            item.classList.add(\"btn--transparent-white\");\n         });\n   }\n   function makeHidden() {\n      header.classList.add(\"hidden\");\n   }\n   function search() {\n      const btn = document.querySelector(\".header__search\");\n      if (!btn) return;\n\n      btn.addEventListener(\"click\", () => {\n         if (searchElem.classList.contains(\"active\")) {\n            searchElem.classList.remove(\"active\");\n            bodyUnLock();\n            makeWhite();\n         } else {\n            searchElem.classList.add(\"active\");\n            bodyLock();\n            makeTransparent();\n         }\n         spoilerElem.classList.remove(\"active\");\n      });\n   }\n   function spoiler() {\n      const btn = document.querySelector(\".header__production\");\n      const backdrop = document.querySelector(\".header-spoiler__backdrop\");\n      if (!btn) return;\n\n      btn.addEventListener(\"mouseenter\", () => {\n         searchElem.classList.remove(\"active\");\n         spoilerElem.classList.add(\"active\");\n         bodyLock();\n         // if (spoilerElem.classList.contains(\"active\")) {\n         //    spoilerElem.classList.remove(\"active\");\n         //    bodyUnLock();\n         // } else {\n         //    spoilerElem.classList.add(\"active\");\n         //    bodyLock();\n         // }\n         makeWhite();\n      });\n      backdrop.addEventListener(\"mouseenter\", () => {\n         spoilerElem.classList.remove(\"active\");\n         bodyUnLock();\n      });\n   }\n   function burger() {\n      const burgerBtn = document.querySelector(\".header__burger\");\n      if (!burgerBtn) return;\n      const mobileMenu = document.querySelector(\".header-mobile\");\n      const sublink = document.querySelector(\".header-mobile__link-sub\");\n      const subMenu = document.querySelector(\".header-mobile__sub\");\n      const subMenuBack = document.querySelector(\".header-mobile__sub-back\");\n      burgerBtn.addEventListener(\"click\", () => {\n         if (burgerBtn.classList.contains(\"active\")) {\n            burgerBtn.classList.remove(\"active\");\n            mobileMenu.classList.remove(\"active\");\n            bodyUnLock();\n         } else {\n            burgerBtn.classList.add(\"active\");\n            mobileMenu.classList.add(\"active\");\n            bodyLock();\n            makeWhite();\n         }\n      });\n      sublink.addEventListener(\"click\", (e) => {\n         e.preventDefault();\n         subMenu.classList.add(\"active\");\n      });\n      subMenuBack.addEventListener(\"click\", () => {\n         subMenu.classList.remove(\"active\");\n      });\n   }\n   onScroll();\n   search();\n   spoiler();\n   burger();\n   window.addEventListener(\"scroll\", () => {\n      if (!ticking) {\n         window.requestAnimationFrame(onScroll);\n         ticking = true;\n      }\n   });\n}\n\nfunction home() {\n   function hero() {\n      const slider = document.querySelector(\".home-hero__swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         slidesPerView: 1,\n         speed: 1500,\n         navigation: {\n            nextEl: \".home-hero__navigation .next\",\n            prevEl: \".home-hero__navigation .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n         pagination: {\n            el: \".home-hero__pagination\",\n            type: \"custom\",\n            renderCustom: function (swiper, current, total) {\n               const spans = Array.from(\n                  { length: total },\n                  (_, i) =>\n                     `<span${\n                        i + 1 === current ? ' class=\"active\"' : \"\"\n                     }></span>`\n               ).join(\"\");\n               return `<p class=\"current\">${current}</p> <div>${spans}</div> <p class=\"total\">${total}</p>`;\n            },\n         },\n         autoplay: {\n            delay: 5000,\n            disableOnInteraction: false,\n         },\n         loop: true,\n      });\n   }\n   function tech() {\n      const tech = document.querySelector(\".home-tech__wrapper\");\n      const techBg = document.querySelector(\".home-tech__subimage\");\n      if (!tech || !techBg) return;\n\n      let container = parseFloat(\n         getComputedStyle(document.querySelector(\".container\")).paddingLeft\n      );\n\n      let marginTop =\n         document.querySelector(\".home-tech__main\").clientHeight +\n         parseFloat(\n            getComputedStyle(document.querySelector(\".home-tech__main\"))\n               .marginBottom\n         ) +\n         parseFloat(\n            getComputedStyle(document.querySelector(\".home-tech\")).paddingTop\n         );\n\n      gsap.to(techBg, {\n         width: \"100vw\",\n         height: \"100vh\",\n\n         marginLeft: -1 * container,\n         borderRadius: 0,\n         ease: \"none\",\n         scrollTrigger: {\n            trigger: tech,\n            start: `top 10%`,\n            end: () => `+=600px`,\n            scrub: 0.1,\n            invalidateOnRefresh: true,\n            // markers: true,\n            onUpdate: (self) => {\n               const content = tech.querySelector(\".home-tech__content\");\n               const bg = tech.querySelector(\".home-tech\");\n               if (self.progress === 1) {\n                  if (!tech._contentShown) {\n                     tech._contentShown = true;\n                     gsap.to(content, {\n                        opacity: 1,\n                        ease: \"none\",\n                     });\n                     gsap.to(bg, {\n                        backgroundColor: \"#001836\",\n                        ease: \"none\",\n                     });\n                  }\n               } else {\n                  if (tech._contentShown || tech._contentShown === undefined) {\n                     tech._contentShown = false;\n                     gsap.to(content, {\n                        opacity: 0,\n                        ease: \"none\",\n                     });\n                     gsap.to(bg, {\n                        backgroundColor: \"transparent\",\n                        ease: \"none\",\n                     });\n                  }\n               }\n            },\n         },\n      });\n\n      const items = tech.querySelectorAll(\".home-tech__item\");\n\n      items.forEach((item, index) => {\n         ScrollTrigger.create({\n            trigger: tech,\n            start: `top+=${1200 + index * 350}px 70%`,\n            end: `top+=${1200 + (index + 1) * 350}px 70%`,\n            onEnter: () => {\n               items.forEach((el) => el.classList.remove(\"active\"));\n               item.classList.add(\"active\");\n            },\n            onEnterBack: () => {\n               items.forEach((el) => el.classList.remove(\"active\"));\n               item.classList.add(\"active\");\n            },\n         });\n      });\n   }\n   function reagents() {\n      const wrapper = document.querySelector(\".home-reagents__wrapper\");\n      const inner = document.querySelector(\".home-reagents__inner\");\n      const list = document.querySelector(\".home-reagents__list\");\n      const radios = document.querySelectorAll(\".home-reagents__radios input\");\n      const labels = document.querySelectorAll(\".home-reagents__radios label\");\n      const tabs = document.querySelectorAll(\".home-reagents [data-tab]\");\n      if (!wrapper || !inner || !list) return;\n\n      const isDesktop = window.innerWidth >= 1024;\n      let scrollableDistance;\n\n      if (isDesktop) {\n         const listHeight = list.scrollHeight;\n         const visibleHeight = list.clientHeight;\n         scrollableDistance = listHeight - visibleHeight;\n      } else {\n         const listWidth = list.scrollWidth;\n         const visibleWidth = list.clientWidth;\n         scrollableDistance = listWidth - visibleWidth;\n      }\n\n      let currentActiveIndex = -1;\n      let scrollTriggerInstance;\n\n      if (isDesktop) {\n         wrapper.style.height = scrollableDistance + window.innerHeight + \"px\";\n      }\n\n      labels.forEach((label, index) => {\n         label.addEventListener(\"click\", () => {\n            const items = list.querySelectorAll(\".home-reagent\");\n            if (items[index]) {\n               const isDesktopClick = window.innerWidth >= 1024;\n\n               if (isDesktopClick) {\n                  const targetScrollPosition = items[index].offsetTop - 100;\n                  const targetProgress = Math.min(\n                     targetScrollPosition / scrollableDistance,\n                     1\n                  );\n\n                  const triggerStart = scrollTriggerInstance.start;\n                  const triggerEnd = scrollTriggerInstance.end;\n                  const targetScrollY =\n                     triggerStart +\n                     targetProgress * (triggerEnd - triggerStart);\n\n                  window.scrollTo({\n                     top: targetScrollY,\n                     behavior: \"smooth\",\n                  });\n               } else {\n                  list.scrollTo({\n                     left: items[index].offsetLeft,\n                     behavior: \"smooth\",\n                  });\n               }\n\n               currentActiveIndex = index;\n               radios.forEach((radio) => {\n                  radio.checked = false;\n               });\n               radios[index].checked = true;\n               tabs.forEach((tab) => {\n                  tab.classList.remove(\"active\");\n               });\n               tabs[index].classList.add(\"active\");\n            }\n         });\n      });\n\n      function updateActiveItem() {\n         const items = list.querySelectorAll(\".home-reagent\");\n         const listRect = list.getBoundingClientRect();\n\n         let newActiveIndex = -1;\n         let minDistance = Infinity;\n\n         if (isDesktop) {\n            const listCenter = listRect.top + listRect.height / 2;\n\n            items.forEach((item, index) => {\n               const itemRect = item.getBoundingClientRect();\n               const itemCenter = itemRect.top + itemRect.height / 2;\n\n               if (\n                  itemCenter >= listRect.top &&\n                  itemCenter <= listRect.bottom\n               ) {\n                  const distance = Math.abs(itemCenter - listCenter);\n                  if (distance < minDistance) {\n                     minDistance = distance;\n                     newActiveIndex = index;\n                  }\n               }\n            });\n         } else {\n            const listCenter = listRect.left + listRect.width / 2;\n\n            items.forEach((item, index) => {\n               const itemRect = item.getBoundingClientRect();\n               const itemCenter = itemRect.left + itemRect.width / 2;\n\n               if (\n                  itemCenter >= listRect.left &&\n                  itemCenter <= listRect.right\n               ) {\n                  const distance = Math.abs(itemCenter - listCenter);\n                  if (distance < minDistance) {\n                     minDistance = distance;\n                     newActiveIndex = index;\n                  }\n               }\n            });\n         }\n\n         if (newActiveIndex !== currentActiveIndex && newActiveIndex !== -1) {\n            currentActiveIndex = newActiveIndex;\n            radios.forEach((radio) => {\n               radio.checked = false;\n            });\n            radios[currentActiveIndex].checked = true;\n            tabs.forEach((tab) => {\n               tab.classList.remove(\"active\");\n            });\n            tabs[currentActiveIndex].classList.add(\"active\");\n         }\n      }\n\n      if (isDesktop) {\n         scrollTriggerInstance = ScrollTrigger.create({\n            trigger: wrapper,\n            start: \"top top\",\n            end: \"bottom bottom\",\n            onUpdate: (self) => {\n               const progress = self.progress;\n               const scrollPosition = scrollableDistance * progress;\n\n               list.scrollTop = scrollPosition;\n               updateActiveItem();\n            },\n            scrub: 0.1,\n            pin: inner,\n            pinSpacing: false,\n         });\n      } else {\n         list.addEventListener(\"scroll\", updateActiveItem);\n      }\n   }\n   function partners() {\n      const slider = document.querySelector(\".home-partners .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         slidesPerView: \"auto\",\n\n         spaceBetween: 16,\n         navigation: {\n            nextEl: \".home-partners__nav .next\",\n            prevEl: \".home-partners__nav .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n      });\n   }\n   function media() {\n      const slider = document.querySelector(\".media-section .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         slidesPerView: \"auto\",\n         spaceBetween: 16,\n         navigation: {\n            nextEl: \".media-section__nav .next\",\n            prevEl: \".media-section__nav .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n      });\n   }\n   function geography() {\n      const dots = document.querySelectorAll(\".home-geography__dot\");\n      if (!dots) return;\n      dots.forEach((dot) => {\n         dot.addEventListener(\"click\", () => {\n            dots.forEach((el) => el.classList.remove(\"active\"));\n            dot.classList.add(\"active\");\n         });\n      });\n\n      const slider = document.querySelector(\".home-geography__preview .swiper\");\n\n      new Swiper(slider, {\n         slidesPerView: 1,\n         spaceBetween: 28,\n         navigation: {\n            nextEl: \".home-geography__preview .next\",\n            prevEl: \".home-geography__preview .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n         pagination: {\n            el: \".geo-preview__pagination\",\n            type: \"custom\",\n            renderCustom: function (swiper, current, total) {\n               return `<span>${current}</span>/<span>${total}</span>`;\n            },\n         },\n      });\n      accordion(\".geo-item__header\", \".geo-item__spoiler\");\n   }\n   media();\n   hero();\n   tech();\n   reagents();\n   partners();\n   geography();\n}\nfunction help() {\n   const form = document.querySelector(\".help-section form\");\n   const success = document.querySelector(\".form-success\");\n   if (!form) return;\n   form.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      success.classList.add(\"active\");\n   });\n}\nfunction catalog() {\n   const filters = document.querySelectorAll(\".catalog-fitler\");\n   const filtersContainer = document.querySelector(\".catalog-filters\");\n   const openBtn = document.querySelector(\".catalog-main__open .btn\");\n   if (!filters.length) return;\n   if (window.innerWidth < 1025) {\n      document.querySelectorAll(\".collapse_show\").forEach((item) => {\n         item.classList.remove(\"collapse_show\");\n      });\n      document.querySelectorAll(\".catalog-fitler__header\").forEach((item) => {\n         item.classList.remove(\"active\");\n      });\n   }\n   filters.forEach((filter) => {\n      const header = filter.querySelector(\".catalog-fitler__header\");\n      const spoiler = filter.querySelector(\".catalog-fitler__spoiler\");\n      header.onclick = () => {\n         spoiler.classList.contains(\"collapse_show\")\n            ? (slideHide(spoiler), header.classList.remove(\"active\"))\n            : (slideShow(spoiler), header.classList.add(\"active\"));\n      };\n   });\n   openBtn.onclick = () => {\n      filtersContainer.classList.contains(\"collapse_show\")\n         ? (slideHide(filtersContainer), openBtn.classList.remove(\"active\"))\n         : (slideShow(filtersContainer), openBtn.classList.add(\"active\"));\n   };\n}\n\nfunction product() {\n   function chars() {\n      const chars = document.querySelectorAll(\".product-char\");\n      if (!chars.length) return;\n      chars.forEach((char) => {\n         const header = char.querySelector(\".product-char__header\");\n         const spoiler = char.querySelector(\".product-char__main\");\n\n         header.onclick = () => {\n            spoiler.classList.contains(\"collapse_show\")\n               ? (slideHide(spoiler), header.classList.remove(\"active\"))\n               : (slideShow(spoiler), header.classList.add(\"active\"));\n         };\n      });\n   }\n   function other() {\n      const other = document.querySelector(\".product-other\");\n      if (!other) return;\n      const slider = document.querySelector(\".product-other__slider .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         spaceBetween: 16,\n         navigation: {\n            nextEl: \".product-other .next\",\n            prevEl: \".product-other .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n         breakpoints: {\n            0: {\n               slidesPerView: \"auto\",\n            },\n            1024: {\n               slidesPerView: 4,\n            },\n         },\n      });\n   }\n   function order() {\n      const order = document.querySelector(\".product-order__content\");\n      if (!order) return;\n      const slider = document.querySelector(\".product-order .swiper\");\n      const listItems = document.querySelectorAll(\".product-order__list li\");\n      if (!slider) return;\n\n      const createProgressCircle = () => {\n         const circle = document.createElement(\"div\");\n         circle.className = \"swiper-progress-circle\";\n         circle.innerHTML = `\n            <svg viewBox=\"0 0 50 50\">\n               <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke=\"#CFD0D2\" stroke-width=\"2\"/>\n               <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke=\"#001836\" stroke-width=\"2\" \n                       stroke-dasharray=\"125.6\" stroke-dashoffset=\"125.6\" \n                       transform=\"rotate(-90 25 25)\" class=\"progress-circle\"/>\n            </svg>\n         `;\n         return circle;\n      };\n\n      const progressCircle = createProgressCircle();\n      order.appendChild(progressCircle);\n\n      let swiper = new Swiper(slider, {\n         spaceBetween: 16,\n         effect: \"fade\",\n         autoplay: {\n            delay: 5000,\n            disableOnInteraction: false,\n         },\n         allowTouchMove: false,\n         loop: true,\n         on: {\n            slideChange: (swiper) => {\n               listItems.forEach((item) => {\n                  item.classList.remove(\"active\");\n               });\n               listItems[swiper.realIndex].classList.add(\"active\");\n            },\n            autoplayTimeLeft(s, time, progress) {\n               const circle = progressCircle.querySelector(\".progress-circle\");\n               const offset = 125.6 * progress;\n               circle.style.strokeDashoffset = offset;\n            },\n         },\n      });\n      listItems.forEach((item, index) => {\n         item.onclick = () => {\n            swiper.slideTo(index);\n         };\n      });\n   }\n   function navigation() {\n      const links = document.querySelectorAll(\".product-aside__link\");\n      const sections = document.querySelectorAll(\".product-section\");\n\n      if (!links.length || !sections.length) return;\n\n      links.forEach((link, index) => {\n         link.addEventListener(\"click\", () => {\n            if (sections[index]) {\n               const y =\n                  sections[index].getBoundingClientRect().top +\n                  window.pageYOffset -\n                  250;\n               window.scrollTo({ top: y, behavior: \"smooth\" });\n            }\n         });\n      });\n\n      function updateActiveLink() {\n         const scrollPosition = window.scrollY + 100;\n\n         let currentIndex = -1;\n         sections.forEach((section, index) => {\n            const sectionTop = section.offsetTop;\n            const sectionBottom = sectionTop + section.offsetHeight;\n\n            if (\n               scrollPosition >= sectionTop &&\n               scrollPosition < sectionBottom\n            ) {\n               currentIndex = index;\n            }\n         });\n\n         if (currentIndex === -1) {\n            sections.forEach((section, index) => {\n               if (scrollPosition >= section.offsetTop) {\n                  currentIndex = index;\n               }\n            });\n         }\n\n         links.forEach((link, index) => {\n            link.classList.toggle(\"active\", index === currentIndex);\n         });\n      }\n\n      let ticking = false;\n      function onScroll() {\n         if (!ticking) {\n            requestAnimationFrame(() => {\n               updateActiveLink();\n               ticking = false;\n            });\n            ticking = true;\n         }\n      }\n\n      window.addEventListener(\"scroll\", onScroll);\n      updateActiveLink();\n   }\n   function btns() {\n      const productBtn = document.querySelector(\".product-sections__btn\");\n      const productSections = document.querySelector(\".product-sections\");\n\n      if (!productBtn || !productSections) return;\n\n      function checkVisibility() {\n         const rect = productSections.getBoundingClientRect();\n         const windowHeight = window.innerHeight;\n\n         const isInViewport = rect.top <= 0 && rect.bottom >= windowHeight;\n\n         if (isInViewport) {\n            productBtn.style.opacity = \"1\";\n            productBtn.style.visibility = \"visible\";\n         } else {\n            productBtn.style.opacity = \"0\";\n            productBtn.style.visibility = \"hidden\";\n         }\n      }\n\n      window.addEventListener(\"scroll\", checkVisibility);\n      checkVisibility();\n   }\n   navigation();\n   chars();\n   other();\n   order();\n   btns();\n}\nfunction production() {\n   const firstCard = document.querySelector(\n      \".production-hero__card:nth-child(1)\"\n   );\n   const secondCard = document.querySelector(\n      \".production-hero__card:nth-child(2)\"\n   );\n\n   if (!firstCard || !secondCard) return;\n\n   ScrollTrigger.create({\n      trigger: secondCard,\n      start: \"top bottom\",\n      end: \"top top\",\n      scrub: true,\n      onUpdate: (self) => {\n         const progress = self.progress;\n         gsap.set(firstCard, {\n            opacity: 1 - progress / 2,\n            scale: 1 - progress / 9,\n         });\n      },\n   });\n}\nfunction media() {\n   function hero() {\n      const slider = document.querySelector(\".media-hero__slider .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         slidesPerView: 1,\n         spaceBetween: 16,\n         navigation: {\n            nextEl: \".media-hero .next\",\n            prevEl: \".media-hero .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n      });\n   }\n   function newSlider() {\n      const slider = document.querySelector(\".new-news__main .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         breakpoints: {\n            0: {\n               slidesPerView: \"auto\",\n            },\n            1024: {\n               slidesPerView: 2,\n            },\n         },\n         spaceBetween: 16,\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n         navigation: {\n            nextEl: \".new-news .next\",\n            prevEl: \".new-news .prev\",\n         },\n      });\n   }\n   hero();\n   newSlider();\n}\n\nfunction job() {\n   function offers() {\n      const offers = document.querySelectorAll(\".job-offers__item\");\n      if (!offers.length) return;\n\n      const observer = new IntersectionObserver(\n         (entries) => {\n            entries.forEach((entry) => {\n               if (entry.isIntersecting) {\n                  offers.forEach((item) => item.classList.remove(\"active\"));\n                  entry.target.classList.add(\"active\");\n               }\n            });\n         },\n         {\n            threshold: 1,\n            rootMargin: \"-20% 0px -20% 0px\",\n         }\n      );\n\n      offers.forEach((offer) => observer.observe(offer));\n   }\n   if (document.querySelector(\"#select-container\")) {\n      new Select(\"#select-container\", {\n         placeholder: \"Желаемая должность\",\n         data: [\n            {\n               id: 1,\n               value: \"Химик-лаборант (технолог)\",\n            },\n            {\n               id: 2,\n               value: \"Стажёр отдела продаж\",\n            },\n            {\n               id: 3,\n               value: \"Главный технолог химического производства\",\n            },\n            {\n               id: 4,\n               value: \"Химик-лаборант (технолог) \",\n            },\n            {\n               id: 5,\n               value: \"Стажёр отдела продаж \",\n            },\n            {\n               id: 6,\n               value: \"Химик-лаборант (технолог) 1\",\n            },\n            {\n               id: 7,\n               value: \"Стажёр отдела продаж 1\",\n            },\n            {\n               id: 8,\n               value: \"Главный технолог химического производства 1\",\n            },\n            {\n               id: 9,\n               value: \"Химик-лаборант (технолог) 1\",\n            },\n            {\n               id: 10,\n               value: \"Стажёр отдела продаж 1\",\n            },\n         ],\n      });\n   }\n   offers();\n}\nfunction article() {\n   function sticky() {\n      const sticky = document.querySelector(\".article-sticky\");\n      if (!sticky) return;\n      const offers = document.querySelectorAll(\".article-sticky__card\");\n      const texts = document.querySelectorAll(\".article-sticky__text\");\n      const textWrapper = document.querySelector(\".article-sticky__texts\");\n      const observer = new IntersectionObserver(\n         (entries) => {\n            entries.forEach((entry) => {\n               if (entry.isIntersecting) {\n                  offers.forEach((item) => item.classList.remove(\"active\"));\n                  entry.target.classList.add(\"active\");\n                  texts.forEach((item) => item.classList.remove(\"active\"));\n                  const targetIndex = Array.from(offers).indexOf(entry.target);\n                  if (targetIndex !== -1 && texts[targetIndex]) {\n                     texts[targetIndex].classList.add(\"active\");\n                     if (window.innerWidth < 1024) {\n                        textWrapper.style.flex = `0 0 ${texts[targetIndex].clientHeight}px`;\n                     }\n                  }\n               }\n            });\n         },\n         {\n            threshold: 1,\n            rootMargin: \"-20% 0px -20% 0px\",\n         }\n      );\n\n      offers.forEach((offer) => observer.observe(offer));\n   }\n   function focus() {\n      const slider = document.querySelector(\".article-focus__slider .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         slidesPerView: 1,\n         spaceBetween: 16,\n         navigation: {\n            nextEl: \".article-focus .next\",\n            prevEl: \".article-focus .prev\",\n         },\n         pagination: {\n            el: \".article-focus .home-hero__pagination\",\n            type: \"custom\",\n            renderCustom: function (swiper, current, total) {\n               const spans = Array.from(\n                  { length: total },\n                  (_, i) =>\n                     `<span${\n                        i + 1 === current ? ' class=\"active\"' : \"\"\n                     }></span>`\n               ).join(\"\");\n               return `<p class=\"current\">${current}</p> <div>${spans}</div> <p class=\"total\">${total}</p>`;\n            },\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n      });\n   }\n   sticky();\n   focus();\n}\nfunction files() {\n   const fileInputs = document.querySelectorAll(\".file-input\");\n   if (!fileInputs.length) return;\n   fileInputs.forEach((fileInput) => {\n      const input = fileInput.querySelector('input[type=\"file\"]');\n      const output = fileInput.querySelector(\".file-input__output\");\n      input.addEventListener(\"change\", () => {\n         const file = input.files[0];\n         if (file) {\n            output.querySelector(\"span\").textContent = file.name;\n            output.classList.add(\"active\");\n         }\n      });\n      output.querySelector(\"button\").addEventListener(\"click\", () => {\n         input.value = \"\";\n         output.querySelector(\"span\").textContent = \"\";\n         output.classList.remove(\"active\");\n      });\n   });\n}\nfunction tech() {\n   function lab() {\n      const lab = document.querySelector(\".tech-lab\");\n      if (!lab) return;\n      const circle = document.querySelector(\".tech-lab__circle\");\n      const items = document.querySelectorAll(\".tech-lab__list li\");\n      const spans = document.querySelectorAll(\".tech-lab__circle span\");\n\n      if (!circle || !items.length) return;\n\n      ScrollTrigger.create({\n         trigger: lab,\n         start: \"top 0%\",\n         end: \"bottom 100%\",\n         scrub: 0.1,\n         markers: false,\n         onUpdate: (self) => {\n            const progress = self.progress;\n\n            let borderWidth;\n            if (progress <= 0.5) {\n               borderWidth = gsap.utils.mapRange(0, 0.5, 0, 85, progress);\n            } else {\n               borderWidth = gsap.utils.mapRange(0.5, 1, 85, 255, progress);\n            }\n\n            gsap.set(circle, { borderWidth: borderWidth });\n\n            const adjustedProgress = Math.max(0, progress - 0.1);\n            const activeIndex = Math.floor(adjustedProgress * items.length);\n            const clampedIndex = Math.min(activeIndex, items.length - 1);\n\n            items.forEach((item, index) => {\n               item.classList.toggle(\"active\", index === clampedIndex);\n            });\n            spans.forEach((item, index) => {\n               item.classList.toggle(\"active\", index === clampedIndex);\n            });\n         },\n      });\n   }\n   function gallery() {\n      const slider = document.querySelector(\".tech-gallery__slider .swiper\");\n      if (!slider) return;\n      const btns = document.querySelectorAll(\n         \".tech-gallery__controls ul button\"\n      );\n      btns.forEach((btn) => {\n         btn.addEventListener(\"click\", () => {\n            btns.forEach((item) => {\n               item.classList.remove(\"active\");\n            });\n            btn.classList.add(\"active\");\n         });\n      });\n      new Swiper(slider, {\n         slidesPerView: \"auto\",\n         spaceBetween: 16,\n         navigation: {\n            nextEl: \".tech-gallery .next\",\n            prevEl: \".tech-gallery .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n      });\n   }\n   lab();\n   gallery();\n}\nfunction contacts() {\n   function hero() {\n      const slider = document.querySelector(\".contacts-hero__slider .swiper\");\n      if (!slider) return;\n      const navBtns = document.querySelectorAll(\n         \".contacts-hero__nav ul button\"\n      );\n      let swiper = new Swiper(slider, {\n         slidesPerView: 1,\n         spaceBetween: 16,\n         scrollbar: {\n            el: \".contacts-hero__progress\",\n            draggable: true,\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n         speed: 1000,\n         on: {\n            slideChange: () => {\n               navBtns.forEach((btn) => {\n                  btn.classList.remove(\"active\");\n               });\n               navBtns[swiper.activeIndex].classList.add(\"active\");\n            },\n         },\n      });\n      navBtns.forEach((btn, index) => {\n         btn.addEventListener(\"click\", () => {\n            swiper.slideTo(index);\n         });\n      });\n   }\n   function office() {\n      const dots = document.querySelectorAll(\n         \".contacts-office .home-geography__dot\"\n      );\n      const preview = document.querySelector(\".office-info\");\n      const closeBtn = document.querySelector(\".office-info__close\");\n      if (!dots || !preview || !closeBtn) return;\n      dots.forEach((dot) => {\n         dot.addEventListener(\"click\", () => {\n            dots.forEach((el) => el.classList.remove(\"active\"));\n            dot.classList.add(\"active\");\n            preview.classList.remove(\"hidden\");\n         });\n      });\n      closeBtn.onclick = () => {\n         preview.classList.add(\"hidden\");\n         dots.forEach((el) => el.classList.remove(\"active\"));\n      };\n   }\n   hero();\n   office();\n}\n\nfunction about() {\n   function solutions() {\n      const square = document.querySelector(\".about-solutions__square\");\n      const heading = document.querySelector(\".about-solutions__heading\");\n      if (!square || !heading) return;\n      const elems = document.querySelectorAll(\".about-solutions__elems > *\");\n      gsap.set(heading, { scale: 1, opacity: 1 });\n      gsap.set(square, { opacity: 0 });\n\n      gsap.to(heading, {\n         scale: 0.5,\n         opacity: 0,\n         scrollTrigger: {\n            trigger: heading,\n            start: \"top 20%\",\n            end: \"top -10%\",\n            scrub: 1,\n         },\n      });\n\n      gsap.set(square, {\n         \"--fill-percent\": \"0%\",\n      });\n\n      gsap.to(square, {\n         opacity: 1,\n         scrollTrigger: {\n            trigger: heading,\n            start: \"top -10%\",\n            end: \"top -40%\",\n            scrub: 1,\n         },\n      });\n      gsap.to(square, {\n         \"--fill-percent\": \"100%\",\n         scrollTrigger: {\n            trigger: heading,\n            start: \"top -40%\",\n            end: \"top -150%\",\n            scrub: 1,\n            onUpdate: (self) => {\n               if (self.progress === 1) {\n                  square.classList.add(\"active\");\n               } else {\n                  square.classList.remove(\"active\");\n               }\n            },\n         },\n      });\n      elems.forEach((elem, index) => {\n         gsap.to(elem, {\n            top: \"50%\",\n            left: \"50%\",\n            translate: \"-50% -50%\",\n            scrollTrigger: {\n               trigger: heading,\n               start: `top ${-40 - index * 3}%`,\n               end: `top ${-100 - index * 3}%`,\n               scrub: 0.1,\n               onUpdate: (self) => {\n                  if (self.progress > 0.9 || self.progress < 0.1) {\n                     elem.classList.add(\"hidden\");\n                  } else {\n                     elem.classList.remove(\"hidden\");\n                  }\n               },\n            },\n         });\n      });\n   }\n   function team() {\n      const slider = document.querySelector(\".about-team__slider .swiper\");\n      const items = document.querySelectorAll(\".about-team__items li\");\n      if (!slider) return;\n      let sw = new Swiper(slider, {\n         slidesPerView: 1,\n         spaceBetween: 48,\n         navigation: {\n            nextEl: \".about-team .next\",\n            prevEl: \".about-team .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n         on: {\n            slideChange: (swiper) => {\n               items.forEach((item) => {\n                  item.classList.remove(\"active\");\n               });\n               items[swiper.activeIndex].classList.add(\"active\");\n            },\n         },\n      });\n      items.forEach((item, index) => {\n         item.addEventListener(\"click\", (e) => {\n            e.preventDefault();\n            sw.slideTo(index);\n         });\n      });\n   }\n   function clients() {\n      const items = document.querySelectorAll(\".about-clients__items li\");\n      if (!items.length) return;\n      const delay = 3000;\n      let activeIndex = 0;\n      setInterval(() => {\n         items.forEach((item) => {\n            item.classList.remove(\"active\", \"prev\");\n         });\n         items[activeIndex].classList.add(\"active\");\n         if (activeIndex > 0) {\n            items[activeIndex - 1].classList.add(\"prev\");\n         }\n         activeIndex++;\n         if (activeIndex >= items.length) {\n            activeIndex = 0;\n         }\n      }, delay);\n   }\n   solutions();\n   team();\n   clients();\n}\nfunction accordion(linkSelector, contentSelector) {\n   // получаем линки\n   const openLinks = document.querySelectorAll(`${linkSelector}`);\n   // контенты\n   const contents = document.querySelectorAll(`${contentSelector}`);\n   if (openLinks.length > 0) {\n      for (let i = 0; i < openLinks.length; i++) {\n         let openLink = openLinks[i];\n         openLink.addEventListener(\"click\", () => {\n            // все прячем\n            for (let j = 0; j < contents.length; j++) {\n               // если хоть один открывается - return\n               if (contents[j].classList.contains(\"collapsing\")) {\n                  return;\n               } // Иначе\n               // все прячем\n               slideHide(contents[j]);\n            }\n            for (let j = 0; j < openLinks.length; j++) {\n               openLinks[j].classList.remove(\"active\");\n            }\n            // записываем в переменную нужный таб\n            let content = contents[i];\n            // работаем с классами линка\n            if (content.classList.contains(\"collapsing\")) {\n               return;\n            } else if (content.classList.contains(\"collapse_show\")) {\n               openLink.classList.remove(\"active\");\n            } else {\n               openLink.classList.add(\"active\");\n            }\n            // показываем нужный\n            slideShow(content);\n         });\n      }\n   }\n}\n\nfunction slideShow(el, duration = 500) {\n   // завершаем работу метода, если элемент содержит класс collapsing или collapse_show\n   if (\n      el.classList.contains(\"collapsing\") ||\n      el.classList.contains(\"collapse_show\")\n   ) {\n      return;\n   }\n   // удаляем класс collapse\n   el.classList.remove(\"collapse\");\n   // сохраняем текущую высоту элемента в константу height (это значение понадобится ниже)\n   const height = el.offsetHeight;\n   // устанавливаем высоте значение 0\n   el.style[\"height\"] = 0;\n   // не отображаем содержимое элемента, выходящее за его пределы\n   el.style[\"overflow\"] = \"hidden\";\n   // создание анимации скольжения с помощью CSS свойства transition\n   el.style[\"transition\"] = `height ${duration}ms ease`;\n   // добавляем класс collapsing\n   el.classList.add(\"collapsing\");\n   // получим значение высоты (нам этого необходимо для того, чтобы просто заставить браузер выполнить перерасчет макета, т.к. он не сможет нам вернуть правильное значение высоты, если не сделает это)\n   el.offsetHeight;\n   // установим в качестве значения высоты значение, которое мы сохранили в константу height\n   el.style[\"height\"] = `${height}px`;\n   // по истечении времени анимации this._duration\n   window.setTimeout(() => {\n      // удалим класс collapsing\n      el.classList.remove(\"collapsing\");\n      // добавим классы collapse и collapse_show\n      el.classList.add(\"collapse\");\n      el.classList.add(\"collapse_show\");\n      // удалим свойства height, transition и overflow\n      el.style[\"height\"] = \"\";\n      el.style[\"transition\"] = \"\";\n      el.style[\"overflow\"] = \"\";\n   }, duration);\n}\nfunction slideHide(el, duration = 500) {\n   // завершаем работу метода, если элемент содержит класс collapsing или collapse_show\n   if (\n      el.classList.contains(\"collapsing\") ||\n      !el.classList.contains(\"collapse_show\")\n   ) {\n      return;\n   }\n   // установим свойству height текущее значение высоты элемента\n   el.style[\"height\"] = `${el.offsetHeight}px`;\n   // получим значение высоты\n   el.offsetHeight;\n   // установим CSS свойству height значение 0\n   el.style[\"height\"] = 0;\n   // обрежем содержимое, выходящее за границы элемента\n   el.style[\"overflow\"] = \"hidden\";\n   // добавим CSS свойство transition для осуществления перехода длительностью this._duration\n   el.style[\"transition\"] = `height ${duration}ms ease`;\n   // удалим классы collapse и collapse_show\n   el.classList.remove(\"collapse\");\n   el.classList.remove(\"collapse_show\");\n   // добавим класс collapsing\n   el.classList.add(\"collapsing\");\n   // после завершения времени анимации\n   window.setTimeout(() => {\n      // удалим класс collapsing\n      el.classList.remove(\"collapsing\");\n      // добавим класс collapsing\n      el.classList.add(\"collapse\");\n      // удалим свойства height, transition и overflow\n      el.style[\"height\"] = \"\";\n      el.style[\"transition\"] = \"\";\n      el.style[\"overflow\"] = \"\";\n   }, duration);\n}\nclass Select {\n   constructor(selector, options) {\n      this.$el = document.querySelector(selector);\n      this.options = options;\n      this.selectedId = options.selectedId || null;\n\n      this.render();\n      this.setup();\n   }\n   render() {\n      this.$el.classList.add(\"select\");\n      const { placeholder, data, selectedId } = this.options;\n      this.$el.innerHTML = this.getTemplate(data, placeholder, selectedId);\n      if (placeholder) {\n         this.$el\n            .querySelector(`[data-type=\"input\"]`)\n            .classList.add(\"placeholder\");\n      }\n   }\n   setup() {\n      this.clickHandler = this.clickHandler.bind(this);\n      this.$el.addEventListener(\"click\", this.clickHandler);\n      this.$value = this.$el.querySelector(`[data-type=\"input\"] span`);\n   }\n   clickHandler(event) {\n      const { type } = event.target.dataset;\n      if (type === \"input\") {\n         this.toggle();\n      } else if (type === \"item\") {\n         const { id } = event.target.dataset;\n         this.select(id);\n      } else if (type === \"back\") {\n         this.toggle();\n      } else if (type === \"header\") {\n         this.toggle();\n      } else if (event.target.closest(\".select__header\")) [this.toggle()];\n   }\n   get current() {\n      return this.options.data.find(\n         (item) => String(item.id) === String(this.selectedId)\n      );\n   }\n   select(id) {\n      this.$el\n         .querySelector(`[data-type=\"input\"]`)\n         .classList.remove(\"placeholder\");\n      this.selectedId = String(id);\n\n      if (!this.current) {\n         console.warn(`Select: item with id \"${id}\" not found in data`);\n         return;\n      }\n\n      this.$value.innerHTML = this.current.value;\n      this.$el.querySelectorAll(`[data-type=\"item\"]`).forEach((item) => {\n         item.classList.remove(\"selected\");\n      });\n      this.$el\n         .querySelector(`[data-id=\"${this.current.id}\"]`)\n         .classList.add(\"selected\");\n      this.close();\n\n      if (this.options.onSelect) {\n         this.options.onSelect(this.current, this.$el);\n      }\n   }\n   open() {\n      this.$el.classList.add(\"open\");\n   }\n   close() {\n      this.$el.classList.remove(\"open\");\n   }\n   toggle() {\n      if (this.$el.classList.contains(\"open\")) {\n         this.close();\n      } else {\n         this.open();\n      }\n   }\n   getTemplate(data, placeholder = `<span></span>`, selectedId) {\n      const items = data.map((item) => {\n         let cls = \"\";\n         if (selectedId && String(item.id) === String(selectedId)) {\n            placeholder = item.value;\n            cls = \"selected\";\n         }\n         return `<li class=\"select__item ${cls}\" data-type=\"item\" data-id=\"${item.id}\">${item.value}</li>`;\n      });\n      return `\n      <div class=\"select__header\" data-type=\"header\">\n      <div class=\"select__back\" data-type=\"back\"></div>\n      <div class=\"select__title\" data-type=\"input\">\n         <span>${placeholder}</span>\n         <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M4 6L8 10L12 6\" stroke=\"#0E0E0E\" stroke-linecap=\"round\"/>\n         </svg>\n    </div>\n      </div>\n      <div class=\"select__content\">\n         <ul class=\"select__list scrollbar-none\">\n            ${items.join(\"\")}\n         </ul>\n      </div>\n      `;\n   }\n}\n\n// Popup\nconst popupLinks = document.querySelectorAll(\".modal__link\");\nconst lockPadding = document.querySelectorAll(\".lock-padding\");\nconst popupCloseIcon = document.querySelectorAll(\".modal__close\");\n\nlet unlock = true;\n\nconst timeout = 500;\n\nif (popupLinks.length > 0) {\n   for (let index = 0; index < popupLinks.length; index++) {\n      const popupLink = popupLinks[index];\n      popupLink.addEventListener(\"click\", function (e) {\n         const popupName = popupLink.getAttribute(\"href\").replace(\"#\", \"\");\n         const curentPopup = document.getElementById(popupName);\n         popupOpen(curentPopup);\n         e.preventDefault();\n      });\n   }\n}\n\nif (popupCloseIcon.length > 0) {\n   for (let index = 0; index < popupCloseIcon.length; index++) {\n      const el = popupCloseIcon[index];\n      el.addEventListener(\"click\", function (e) {\n         popupClose(el.closest(\".modal\"));\n         e.preventDefault();\n      });\n   }\n}\n\nfunction popupOpen(curentPopup) {\n   if (curentPopup && unlock) {\n      const popupActive = document.querySelector(\".modal.open\");\n      if (popupActive) {\n         popupClose(popupActive, false);\n      } else {\n         bodyLock();\n      }\n      curentPopup.classList.add(\"open\");\n      curentPopup.addEventListener(\"click\", function (e) {\n         if (!e.target.closest(\".modal__content\")) {\n            popupClose(e.target.closest(\".modal\"));\n         }\n      });\n   }\n}\nfunction popupClose(popupActive, doUnlock = true) {\n   if (unlock) {\n      popupActive.classList.remove(\"open\");\n      if (doUnlock) {\n         bodyUnLock();\n      }\n   }\n}\n\nfunction bodyLock() {\n   console.log(\"bodyLock\");\n   const wrapperElement = document.querySelector(\".wrapper\");\n   const lockPaddingValue = wrapperElement\n      ? window.innerWidth - wrapperElement.offsetWidth + \"px\"\n      : window.innerWidth - document.body.offsetWidth + \"px\";\n\n   if (lockPadding.length > 0) {\n      for (let index = 0; index < lockPadding.length; index++) {\n         const el = lockPadding[index];\n         el.style.paddingRight = lockPaddingValue;\n      }\n   }\n   body.style.paddingRight = lockPaddingValue;\n   body.classList.add(\"lock\");\n   // lenis.stop();\n\n   unlock = false;\n   setTimeout(function () {\n      unlock = true;\n   }, timeout);\n}\n\nfunction bodyUnLock() {\n   console.log(\"bodyUnLock\");\n   setTimeout(function () {\n      if (lockPadding.length > 0) {\n         for (let index = 0; index < lockPadding.length; index++) {\n            const el = lockPadding[index];\n            el.style.paddingRight = \"0px\";\n         }\n      }\n      body.style.paddingRight = \"0px\";\n      body.classList.remove(\"lock\");\n      // lenis.start();\n   }, timeout);\n\n   unlock = false;\n   setTimeout(function () {\n      unlock = true;\n   }, timeout);\n}\n\ndocument.addEventListener(\"keydown\", function (e) {\n   if (e.which === 27) {\n      const popupActive = document.querySelector(\".modal.open\");\n      popupClose(popupActive);\n   }\n});\n"]}