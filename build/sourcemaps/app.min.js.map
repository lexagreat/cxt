{"version":3,"sources":["app.js"],"names":["maskOptions","mask","document","querySelectorAll","length","forEach","item","IMask","body","header","querySelector","hero","lastScroll","Math","max","window","scrollY","ticking","onScroll","currentScroll","classList","add","remove","addEventListener","requestAnimationFrame","home","slider","Swiper","slidesPerView","spaceBetween","navigation","nextEl","prevEl","mousewheel","enabled","forceToAxis","media","speed","pagination","el","type","renderCustom","swiper","current","total","spans","Array","from","_","i","join","autoplay","delay","disableOnInteraction","loop","tech","techBg","container","parseFloat","getComputedStyle","paddingLeft","clientHeight","marginBottom","paddingTop","gsap","to","width","height","marginLeft","borderRadius","ease","scrollTrigger","trigger","start","end","scrub","invalidateOnRefresh","onUpdate","self","content","bg","progress","_contentShown","opacity","backgroundColor","undefined","items","index","ScrollTrigger","create","onEnter","onEnterBack","wrapper","inner","list","radios","labels","tabs","isDesktop","innerWidth","scrollableDistance","listHeight","scrollHeight","visibleHeight","listWidth","scrollWidth","visibleWidth","clientWidth","scrollTriggerInstance","currentActiveIndex","updateActiveItem","listRect","getBoundingClientRect","newActiveIndex","minDistance","Infinity","listCenter","top","itemRect","itemCenter","bottom","distance","abs","left","right","radio","checked","tab","style","innerHeight","label","targetScrollPosition","offsetTop","targetProgress","min","triggerStart","targetScrollY","scrollTo","behavior","offsetLeft","scrollPosition","scrollTop","pin","pinSpacing","reagents","partners","dots","dot","accordion","geography","help","form","success","e","preventDefault","catalog","filters","filtersContainer","openBtn","filter","spoiler","onclick","contains","slideHide","slideShow","product","links","sections","updateActiveLink","currentIndex","section","sectionTop","sectionBottom","offsetHeight","link","toggle","y","pageYOffset","chars","char","breakpoints","0","1024","other","order","listItems","progressCircle","circle","createElement","className","innerHTML","createProgressCircle","appendChild","effect","allowTouchMove","on","slideChange","realIndex","[object Object]","s","time","offset","strokeDashoffset","slideTo","productBtn","productSections","checkVisibility","rect","windowHeight","visibility","btns","files","fileInputs","fileInput","input","output","file","textContent","name","value","linkSelector","contentSelector","openLinks","contents","openLink","j","duration","setTimeout","registerPlugin","popupLinks","lockPadding","popupCloseIcon","unlock","timeout","popupLink","popupName","getAttribute","replace","popupOpen","getElementById","popupClose","closest","curentPopup","popupActive","bodyLock","target","doUnlock","bodyUnLock","lockPaddingValue","offsetWidth","paddingRight","which"],"mappings":"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","file":"../js/app.min.js","sourcesContent":["const maskOptions = {\n   mask: \"+{7} (000) 000-00-00\",\n   // lazy: false,  // make placeholder always visible\n   // placeholderChar: '0'     // defaults to '_'\n};\nif (document.querySelectorAll(\"[data-phone]\").length) {\n   document.querySelectorAll(\"[data-phone]\").forEach((item) => {\n      const mask = IMask(item, maskOptions);\n   });\n}\nconst body = document.body;\n\ngsap.registerPlugin(ScrollTrigger);\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n   home();\n   header();\n   if (window.innerWidth < 569) {\n      accordion(\".footer__subheader--accordion\", \".footer__spoiler\");\n   }\n   help();\n   catalog();\n   product();\n   files();\n});\n\nfunction header() {\n   const header = document.querySelector(\".header\");\n   if (!header) return;\n   const hero = document.querySelector(\".hero\");\n   let lastScroll = Math.max(0, window.scrollY);\n   let ticking = false;\n\n   if (!hero) {\n      header.classList.add(\"white\");\n   }\n\n   function onScroll() {\n      const currentScroll = Math.max(0, window.scrollY);\n      if (currentScroll > lastScroll) {\n         makeHidden();\n      } else {\n         makeWhite();\n      }\n      if (currentScroll === 0 && hero) {\n         makeTransparent();\n      }\n      lastScroll = currentScroll;\n      ticking = false;\n   }\n\n   function makeWhite() {\n      header.classList.remove(\"hidden\");\n      header.classList.add(\"white\");\n      document\n         .querySelectorAll(\".header__wrapper .btn--blur\")\n         .forEach((item) => {\n            item.classList.remove(\"btn--blur\");\n            item.classList.add(\"btn--grey-light\");\n         });\n      document\n         .querySelectorAll(\".header__wrapper .btn--transparent-white\")\n         .forEach((item) => {\n            item.classList.remove(\"btn--transparent-white\");\n            item.classList.add(\"btn--transparent-black\");\n         });\n   }\n   function makeTransparent() {\n      header.classList.remove(\"white\");\n      document\n         .querySelectorAll(\".header__wrapper .btn--grey-light\")\n         .forEach((item) => {\n            item.classList.remove(\"btn--grey-light\");\n            item.classList.add(\"btn--blur\");\n         });\n      document\n         .querySelectorAll(\".header__wrapper .btn--transparent-black\")\n         .forEach((item) => {\n            item.classList.remove(\"btn--transparent-black\");\n            item.classList.add(\"btn--transparent-white\");\n         });\n   }\n   function makeHidden() {\n      header.classList.add(\"hidden\");\n   }\n\n   window.addEventListener(\"scroll\", () => {\n      if (!ticking) {\n         window.requestAnimationFrame(onScroll);\n         ticking = true;\n      }\n   });\n}\n\nfunction home() {\n   function hero() {\n      const slider = document.querySelector(\".home-hero .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         slidesPerView: 1,\n         speed: 1500,\n         navigation: {\n            nextEl: \".home-hero__navigation .next\",\n            prevEl: \".home-hero__navigation .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n         pagination: {\n            el: \".home-hero__pagination\",\n            type: \"custom\",\n            renderCustom: function (swiper, current, total) {\n               const spans = Array.from(\n                  { length: total },\n                  (_, i) =>\n                     `<span${\n                        i + 1 === current ? ' class=\"active\"' : \"\"\n                     }></span>`\n               ).join(\"\");\n               return `<p class=\"current\">${current}</p> <div>${spans}</div> <p class=\"total\">${total}</p>`;\n            },\n         },\n         autoplay: {\n            delay: 5000,\n            disableOnInteraction: false,\n         },\n         loop: true,\n      });\n   }\n   function tech() {\n      const tech = document.querySelector(\".home-tech__wrapper\");\n      const techBg = document.querySelector(\".home-tech__subimage\");\n      if (!tech || !techBg) return;\n\n      let container = parseFloat(\n         getComputedStyle(document.querySelector(\".container\")).paddingLeft\n      );\n\n      let marginTop =\n         document.querySelector(\".home-tech__main\").clientHeight +\n         parseFloat(\n            getComputedStyle(document.querySelector(\".home-tech__main\"))\n               .marginBottom\n         ) +\n         parseFloat(\n            getComputedStyle(document.querySelector(\".home-tech\")).paddingTop\n         );\n\n      gsap.to(techBg, {\n         width: \"100vw\",\n         height: \"100vh\",\n\n         marginLeft: -1 * container,\n         borderRadius: 0,\n         ease: \"none\",\n         scrollTrigger: {\n            trigger: tech,\n            start: `top 10%`,\n            end: () => `+=600px`,\n            scrub: 0.1,\n            invalidateOnRefresh: true,\n            // markers: true,\n            onUpdate: (self) => {\n               const content = tech.querySelector(\".home-tech__content\");\n               const bg = tech.querySelector(\".home-tech\");\n               if (self.progress === 1) {\n                  if (!tech._contentShown) {\n                     tech._contentShown = true;\n                     gsap.to(content, {\n                        opacity: 1,\n                        ease: \"none\",\n                     });\n                     gsap.to(bg, {\n                        backgroundColor: \"#001836\",\n                        ease: \"none\",\n                     });\n                  }\n               } else {\n                  if (tech._contentShown || tech._contentShown === undefined) {\n                     tech._contentShown = false;\n                     gsap.to(content, {\n                        opacity: 0,\n                        ease: \"none\",\n                     });\n                     gsap.to(bg, {\n                        backgroundColor: \"transparent\",\n                        ease: \"none\",\n                     });\n                  }\n               }\n            },\n         },\n      });\n\n      const items = tech.querySelectorAll(\".home-tech__item\");\n\n      items.forEach((item, index) => {\n         ScrollTrigger.create({\n            trigger: tech,\n            start: `top+=${1200 + index * 350}px 70%`,\n            end: `top+=${1200 + (index + 1) * 350}px 70%`,\n            onEnter: () => {\n               items.forEach((el) => el.classList.remove(\"active\"));\n               item.classList.add(\"active\");\n            },\n            onEnterBack: () => {\n               items.forEach((el) => el.classList.remove(\"active\"));\n               item.classList.add(\"active\");\n            },\n         });\n      });\n   }\n   function reagents() {\n      const wrapper = document.querySelector(\".home-reagents__wrapper\");\n      const inner = document.querySelector(\".home-reagents__inner\");\n      const list = document.querySelector(\".home-reagents__list\");\n      const radios = document.querySelectorAll(\".home-reagents__radios input\");\n      const labels = document.querySelectorAll(\".home-reagents__radios label\");\n      const tabs = document.querySelectorAll(\".home-reagents [data-tab]\");\n      if (!wrapper || !inner || !list) return;\n\n      const isDesktop = window.innerWidth >= 1024;\n      let scrollableDistance;\n\n      if (isDesktop) {\n         const listHeight = list.scrollHeight;\n         const visibleHeight = list.clientHeight;\n         scrollableDistance = listHeight - visibleHeight;\n      } else {\n         const listWidth = list.scrollWidth;\n         const visibleWidth = list.clientWidth;\n         scrollableDistance = listWidth - visibleWidth;\n      }\n\n      let currentActiveIndex = -1;\n      let scrollTriggerInstance;\n\n      if (isDesktop) {\n         wrapper.style.height = scrollableDistance + window.innerHeight + \"px\";\n      }\n\n      labels.forEach((label, index) => {\n         label.addEventListener(\"click\", () => {\n            const items = list.querySelectorAll(\".home-reagent\");\n            if (items[index]) {\n               const isDesktopClick = window.innerWidth >= 1024;\n\n               if (isDesktopClick) {\n                  const targetScrollPosition = items[index].offsetTop - 100;\n                  const targetProgress = Math.min(\n                     targetScrollPosition / scrollableDistance,\n                     1\n                  );\n\n                  const triggerStart = scrollTriggerInstance.start;\n                  const triggerEnd = scrollTriggerInstance.end;\n                  const targetScrollY =\n                     triggerStart +\n                     targetProgress * (triggerEnd - triggerStart);\n\n                  window.scrollTo({\n                     top: targetScrollY,\n                     behavior: \"smooth\",\n                  });\n               } else {\n                  list.scrollTo({\n                     left: items[index].offsetLeft,\n                     behavior: \"smooth\",\n                  });\n               }\n\n               currentActiveIndex = index;\n               radios.forEach((radio) => {\n                  radio.checked = false;\n               });\n               radios[index].checked = true;\n               tabs.forEach((tab) => {\n                  tab.classList.remove(\"active\");\n               });\n               tabs[index].classList.add(\"active\");\n            }\n         });\n      });\n\n      function updateActiveItem() {\n         const items = list.querySelectorAll(\".home-reagent\");\n         const listRect = list.getBoundingClientRect();\n\n         let newActiveIndex = -1;\n         let minDistance = Infinity;\n\n         if (isDesktop) {\n            const listCenter = listRect.top + listRect.height / 2;\n\n            items.forEach((item, index) => {\n               const itemRect = item.getBoundingClientRect();\n               const itemCenter = itemRect.top + itemRect.height / 2;\n\n               if (\n                  itemCenter >= listRect.top &&\n                  itemCenter <= listRect.bottom\n               ) {\n                  const distance = Math.abs(itemCenter - listCenter);\n                  if (distance < minDistance) {\n                     minDistance = distance;\n                     newActiveIndex = index;\n                  }\n               }\n            });\n         } else {\n            const listCenter = listRect.left + listRect.width / 2;\n\n            items.forEach((item, index) => {\n               const itemRect = item.getBoundingClientRect();\n               const itemCenter = itemRect.left + itemRect.width / 2;\n\n               if (\n                  itemCenter >= listRect.left &&\n                  itemCenter <= listRect.right\n               ) {\n                  const distance = Math.abs(itemCenter - listCenter);\n                  if (distance < minDistance) {\n                     minDistance = distance;\n                     newActiveIndex = index;\n                  }\n               }\n            });\n         }\n\n         if (newActiveIndex !== currentActiveIndex && newActiveIndex !== -1) {\n            currentActiveIndex = newActiveIndex;\n            radios.forEach((radio) => {\n               radio.checked = false;\n            });\n            radios[currentActiveIndex].checked = true;\n            tabs.forEach((tab) => {\n               tab.classList.remove(\"active\");\n            });\n            tabs[currentActiveIndex].classList.add(\"active\");\n         }\n      }\n\n      if (isDesktop) {\n         scrollTriggerInstance = ScrollTrigger.create({\n            trigger: wrapper,\n            start: \"top top\",\n            end: \"bottom bottom\",\n            onUpdate: (self) => {\n               const progress = self.progress;\n               const scrollPosition = scrollableDistance * progress;\n\n               list.scrollTop = scrollPosition;\n               updateActiveItem();\n            },\n            scrub: 0.1,\n            pin: inner,\n            pinSpacing: false,\n         });\n      } else {\n         list.addEventListener(\"scroll\", updateActiveItem);\n      }\n   }\n   function partners() {\n      const slider = document.querySelector(\".home-partners .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         slidesPerView: \"auto\",\n\n         spaceBetween: 16,\n         navigation: {\n            nextEl: \".home-partners__nav .next\",\n            prevEl: \".home-partners__nav .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n      });\n   }\n   function media() {\n      const slider = document.querySelector(\".media-section .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         slidesPerView: \"auto\",\n         spaceBetween: 16,\n         navigation: {\n            nextEl: \".media-section__nav .next\",\n            prevEl: \".media-section__nav .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n      });\n   }\n   function geography() {\n      const dots = document.querySelectorAll(\".home-geography__dot\");\n      if (!dots) return;\n      dots.forEach((dot) => {\n         dot.addEventListener(\"click\", () => {\n            dots.forEach((el) => el.classList.remove(\"active\"));\n            dot.classList.add(\"active\");\n         });\n      });\n\n      const slider = document.querySelector(\".home-geography__preview .swiper\");\n\n      new Swiper(slider, {\n         slidesPerView: 1,\n         spaceBetween: 28,\n         navigation: {\n            nextEl: \".home-geography__preview .next\",\n            prevEl: \".home-geography__preview .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n         pagination: {\n            el: \".geo-preview__pagination\",\n            type: \"custom\",\n            renderCustom: function (swiper, current, total) {\n               return `<span>${current}</span>/<span>${total}</span>`;\n            },\n         },\n      });\n      accordion(\".geo-item__header\", \".geo-item__spoiler\");\n   }\n   media();\n   hero();\n   tech();\n   reagents();\n   partners();\n   geography();\n}\nfunction help() {\n   const form = document.querySelector(\".help-section form\");\n   const success = document.querySelector(\".form-success\");\n   if (!form) return;\n   form.addEventListener(\"submit\", (e) => {\n      e.preventDefault();\n      success.classList.add(\"active\");\n   });\n}\nfunction catalog() {\n   const filters = document.querySelectorAll(\".catalog-fitler\");\n   const filtersContainer = document.querySelector(\".catalog-filters\");\n   const openBtn = document.querySelector(\".catalog-main__open .btn\");\n   if (!filters.length) return;\n   if (window.innerWidth < 1025) {\n      document.querySelectorAll(\".collapse_show\").forEach((item) => {\n         item.classList.remove(\"collapse_show\");\n      });\n      document.querySelectorAll(\".catalog-fitler__header\").forEach((item) => {\n         item.classList.remove(\"active\");\n      });\n   }\n   filters.forEach((filter) => {\n      const header = filter.querySelector(\".catalog-fitler__header\");\n      const spoiler = filter.querySelector(\".catalog-fitler__spoiler\");\n      header.onclick = () => {\n         spoiler.classList.contains(\"collapse_show\")\n            ? (slideHide(spoiler), header.classList.remove(\"active\"))\n            : (slideShow(spoiler), header.classList.add(\"active\"));\n      };\n   });\n   openBtn.onclick = () => {\n      filtersContainer.classList.contains(\"collapse_show\")\n         ? (slideHide(filtersContainer), openBtn.classList.remove(\"active\"))\n         : (slideShow(filtersContainer), openBtn.classList.add(\"active\"));\n   };\n}\n\nfunction product() {\n   function chars() {\n      const chars = document.querySelectorAll(\".product-char\");\n      if (!chars.length) return;\n      chars.forEach((char) => {\n         const header = char.querySelector(\".product-char__header\");\n         const spoiler = char.querySelector(\".product-char__main\");\n\n         header.onclick = () => {\n            spoiler.classList.contains(\"collapse_show\")\n               ? (slideHide(spoiler), header.classList.remove(\"active\"))\n               : (slideShow(spoiler), header.classList.add(\"active\"));\n         };\n      });\n   }\n   function other() {\n      const other = document.querySelector(\".product-other\");\n      if (!other) return;\n      const slider = document.querySelector(\".product-other__slider .swiper\");\n      if (!slider) return;\n      new Swiper(slider, {\n         spaceBetween: 16,\n         navigation: {\n            nextEl: \".product-other .next\",\n            prevEl: \".product-other .prev\",\n         },\n         mousewheel: {\n            enabled: true,\n            forceToAxis: true,\n         },\n         breakpoints: {\n            0: {\n               slidesPerView: \"auto\",\n            },\n            1024: {\n               slidesPerView: 4,\n            },\n         },\n      });\n   }\n   function order() {\n      const order = document.querySelector(\".product-order__content\");\n      if (!order) return;\n      const slider = document.querySelector(\".product-order .swiper\");\n      const listItems = document.querySelectorAll(\".product-order__list li\");\n      if (!slider) return;\n\n      const createProgressCircle = () => {\n         const circle = document.createElement(\"div\");\n         circle.className = \"swiper-progress-circle\";\n         circle.innerHTML = `\n            <svg viewBox=\"0 0 50 50\">\n               <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke=\"#CFD0D2\" stroke-width=\"2\"/>\n               <circle cx=\"25\" cy=\"25\" r=\"20\" fill=\"none\" stroke=\"#001836\" stroke-width=\"2\" \n                       stroke-dasharray=\"125.6\" stroke-dashoffset=\"125.6\" \n                       transform=\"rotate(-90 25 25)\" class=\"progress-circle\"/>\n            </svg>\n         `;\n         return circle;\n      };\n\n      const progressCircle = createProgressCircle();\n      order.appendChild(progressCircle);\n\n      let swiper = new Swiper(slider, {\n         spaceBetween: 16,\n         effect: \"fade\",\n         autoplay: {\n            delay: 5000,\n            disableOnInteraction: false,\n         },\n         allowTouchMove: false,\n         loop: true,\n         on: {\n            slideChange: (swiper) => {\n               listItems.forEach((item) => {\n                  item.classList.remove(\"active\");\n               });\n               listItems[swiper.realIndex].classList.add(\"active\");\n            },\n            autoplayTimeLeft(s, time, progress) {\n               const circle = progressCircle.querySelector(\".progress-circle\");\n               const offset = 125.6 * progress;\n               circle.style.strokeDashoffset = offset;\n            },\n         },\n      });\n      listItems.forEach((item, index) => {\n         item.onclick = () => {\n            swiper.slideTo(index);\n         };\n      });\n   }\n   function navigation() {\n      const links = document.querySelectorAll(\".product-aside__link\");\n      const sections = document.querySelectorAll(\".product-section\");\n\n      if (!links.length || !sections.length) return;\n\n      links.forEach((link, index) => {\n         link.addEventListener(\"click\", () => {\n            if (sections[index]) {\n               const y =\n                  sections[index].getBoundingClientRect().top +\n                  window.pageYOffset -\n                  250;\n               window.scrollTo({ top: y, behavior: \"smooth\" });\n            }\n         });\n      });\n\n      function updateActiveLink() {\n         const scrollPosition = window.scrollY + 100;\n\n         let currentIndex = -1;\n         sections.forEach((section, index) => {\n            const sectionTop = section.offsetTop;\n            const sectionBottom = sectionTop + section.offsetHeight;\n\n            if (\n               scrollPosition >= sectionTop &&\n               scrollPosition < sectionBottom\n            ) {\n               currentIndex = index;\n            }\n         });\n\n         if (currentIndex === -1) {\n            sections.forEach((section, index) => {\n               if (scrollPosition >= section.offsetTop) {\n                  currentIndex = index;\n               }\n            });\n         }\n\n         links.forEach((link, index) => {\n            link.classList.toggle(\"active\", index === currentIndex);\n         });\n      }\n\n      let ticking = false;\n      function onScroll() {\n         if (!ticking) {\n            requestAnimationFrame(() => {\n               updateActiveLink();\n               ticking = false;\n            });\n            ticking = true;\n         }\n      }\n\n      window.addEventListener(\"scroll\", onScroll);\n      updateActiveLink();\n   }\n   function btns() {\n      const productBtn = document.querySelector(\".product-sections__btn\");\n      const productSections = document.querySelector(\".product-sections\");\n\n      if (!productBtn || !productSections) return;\n\n      function checkVisibility() {\n         const rect = productSections.getBoundingClientRect();\n         const windowHeight = window.innerHeight;\n\n         const isInViewport = rect.top <= 0 && rect.bottom >= windowHeight;\n\n         if (isInViewport) {\n            productBtn.style.opacity = \"1\";\n            productBtn.style.visibility = \"visible\";\n         } else {\n            productBtn.style.opacity = \"0\";\n            productBtn.style.visibility = \"hidden\";\n         }\n      }\n\n      window.addEventListener(\"scroll\", checkVisibility);\n      checkVisibility();\n   }\n   navigation();\n   chars();\n   other();\n   order();\n   btns();\n}\n\nfunction files() {\n   const fileInputs = document.querySelectorAll(\".file-input\");\n   if (!fileInputs.length) return;\n   fileInputs.forEach((fileInput) => {\n      const input = fileInput.querySelector('input[type=\"file\"]');\n      const output = fileInput.querySelector(\".file-input__output\");\n      input.addEventListener(\"change\", () => {\n         const file = input.files[0];\n         if (file) {\n            output.querySelector(\"span\").textContent = file.name;\n            output.classList.add(\"active\");\n         }\n      });\n      output.querySelector(\"button\").addEventListener(\"click\", () => {\n         input.value = \"\";\n         output.querySelector(\"span\").textContent = \"\";\n         output.classList.remove(\"active\");\n      });\n   });\n}\n\nfunction accordion(linkSelector, contentSelector) {\n   // получаем линки\n   const openLinks = document.querySelectorAll(`${linkSelector}`);\n   // контенты\n   const contents = document.querySelectorAll(`${contentSelector}`);\n   if (openLinks.length > 0) {\n      for (let i = 0; i < openLinks.length; i++) {\n         let openLink = openLinks[i];\n         openLink.addEventListener(\"click\", () => {\n            // все прячем\n            for (let j = 0; j < contents.length; j++) {\n               // если хоть один открывается - return\n               if (contents[j].classList.contains(\"collapsing\")) {\n                  return;\n               } // Иначе\n               // все прячем\n               slideHide(contents[j]);\n            }\n            for (let j = 0; j < openLinks.length; j++) {\n               openLinks[j].classList.remove(\"active\");\n            }\n            // записываем в переменную нужный таб\n            let content = contents[i];\n            // работаем с классами линка\n            if (content.classList.contains(\"collapsing\")) {\n               return;\n            } else if (content.classList.contains(\"collapse_show\")) {\n               openLink.classList.remove(\"active\");\n            } else {\n               openLink.classList.add(\"active\");\n            }\n            // показываем нужный\n            slideShow(content);\n         });\n      }\n   }\n}\n\nfunction slideShow(el, duration = 500) {\n   // завершаем работу метода, если элемент содержит класс collapsing или collapse_show\n   if (\n      el.classList.contains(\"collapsing\") ||\n      el.classList.contains(\"collapse_show\")\n   ) {\n      return;\n   }\n   // удаляем класс collapse\n   el.classList.remove(\"collapse\");\n   // сохраняем текущую высоту элемента в константу height (это значение понадобится ниже)\n   const height = el.offsetHeight;\n   // устанавливаем высоте значение 0\n   el.style[\"height\"] = 0;\n   // не отображаем содержимое элемента, выходящее за его пределы\n   el.style[\"overflow\"] = \"hidden\";\n   // создание анимации скольжения с помощью CSS свойства transition\n   el.style[\"transition\"] = `height ${duration}ms ease`;\n   // добавляем класс collapsing\n   el.classList.add(\"collapsing\");\n   // получим значение высоты (нам этого необходимо для того, чтобы просто заставить браузер выполнить перерасчет макета, т.к. он не сможет нам вернуть правильное значение высоты, если не сделает это)\n   el.offsetHeight;\n   // установим в качестве значения высоты значение, которое мы сохранили в константу height\n   el.style[\"height\"] = `${height}px`;\n   // по истечении времени анимации this._duration\n   window.setTimeout(() => {\n      // удалим класс collapsing\n      el.classList.remove(\"collapsing\");\n      // добавим классы collapse и collapse_show\n      el.classList.add(\"collapse\");\n      el.classList.add(\"collapse_show\");\n      // удалим свойства height, transition и overflow\n      el.style[\"height\"] = \"\";\n      el.style[\"transition\"] = \"\";\n      el.style[\"overflow\"] = \"\";\n   }, duration);\n}\nfunction slideHide(el, duration = 500) {\n   // завершаем работу метода, если элемент содержит класс collapsing или collapse_show\n   if (\n      el.classList.contains(\"collapsing\") ||\n      !el.classList.contains(\"collapse_show\")\n   ) {\n      return;\n   }\n   // установим свойству height текущее значение высоты элемента\n   el.style[\"height\"] = `${el.offsetHeight}px`;\n   // получим значение высоты\n   el.offsetHeight;\n   // установим CSS свойству height значение 0\n   el.style[\"height\"] = 0;\n   // обрежем содержимое, выходящее за границы элемента\n   el.style[\"overflow\"] = \"hidden\";\n   // добавим CSS свойство transition для осуществления перехода длительностью this._duration\n   el.style[\"transition\"] = `height ${duration}ms ease`;\n   // удалим классы collapse и collapse_show\n   el.classList.remove(\"collapse\");\n   el.classList.remove(\"collapse_show\");\n   // добавим класс collapsing\n   el.classList.add(\"collapsing\");\n   // после завершения времени анимации\n   window.setTimeout(() => {\n      // удалим класс collapsing\n      el.classList.remove(\"collapsing\");\n      // добавим класс collapsing\n      el.classList.add(\"collapse\");\n      // удалим свойства height, transition и overflow\n      el.style[\"height\"] = \"\";\n      el.style[\"transition\"] = \"\";\n      el.style[\"overflow\"] = \"\";\n   }, duration);\n}\n// Popup\nconst popupLinks = document.querySelectorAll(\".modal__link\");\nconst lockPadding = document.querySelectorAll(\".lock-padding\");\nconst popupCloseIcon = document.querySelectorAll(\".modal__close\");\n\nlet unlock = true;\n\nconst timeout = 500;\n\nif (popupLinks.length > 0) {\n   for (let index = 0; index < popupLinks.length; index++) {\n      const popupLink = popupLinks[index];\n      popupLink.addEventListener(\"click\", function (e) {\n         const popupName = popupLink.getAttribute(\"href\").replace(\"#\", \"\");\n         const curentPopup = document.getElementById(popupName);\n         popupOpen(curentPopup);\n         e.preventDefault();\n      });\n   }\n}\n\nif (popupCloseIcon.length > 0) {\n   for (let index = 0; index < popupCloseIcon.length; index++) {\n      const el = popupCloseIcon[index];\n      el.addEventListener(\"click\", function (e) {\n         popupClose(el.closest(\".modal\"));\n         e.preventDefault();\n      });\n   }\n}\n\nfunction popupOpen(curentPopup) {\n   if (curentPopup && unlock) {\n      const popupActive = document.querySelector(\".modal.open\");\n      if (popupActive) {\n         popupClose(popupActive, false);\n      } else {\n         bodyLock();\n      }\n      curentPopup.classList.add(\"open\");\n      curentPopup.addEventListener(\"click\", function (e) {\n         if (!e.target.closest(\".modal__content\")) {\n            popupClose(e.target.closest(\".modal\"));\n         }\n      });\n   }\n}\nfunction popupClose(popupActive, doUnlock = true) {\n   if (unlock) {\n      popupActive.classList.remove(\"open\");\n      if (doUnlock) {\n         bodyUnLock();\n      }\n   }\n}\n\nfunction bodyLock() {\n   const lockPaddingValue =\n      window.innerWidth - document.querySelector(\".wrapper\").offsetWidth + \"px\";\n\n   if (lockPadding.length > 0) {\n      for (let index = 0; index < lockPadding.length; index++) {\n         const el = lockPadding[index];\n         el.style.paddingRight = lockPaddingValue;\n      }\n   }\n   body.style.paddingRight = lockPaddingValue;\n   body.classList.add(\"lock\");\n   // lenis.stop();\n\n   unlock = false;\n   setTimeout(function () {\n      unlock = true;\n   }, timeout);\n}\n\nfunction bodyUnLock() {\n   setTimeout(function () {\n      if (lockPadding.length > 0) {\n         for (let index = 0; index < lockPadding.length; index++) {\n            const el = lockPadding[index];\n            el.style.paddingRight = \"0px\";\n         }\n      }\n      body.style.paddingRight = \"0px\";\n      body.classList.remove(\"lock\");\n      // lenis.start();\n   }, timeout);\n\n   unlock = false;\n   setTimeout(function () {\n      unlock = true;\n   }, timeout);\n}\n\ndocument.addEventListener(\"keydown\", function (e) {\n   if (e.which === 27) {\n      const popupActive = document.querySelector(\".modal.open\");\n      popupClose(popupActive);\n   }\n});\n"]}